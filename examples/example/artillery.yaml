config:
  target: http://localhost:4000
  processor: ./scripts/artillery-helpers.js
  phases:
    - name: Run
      duration: 600
      arrivalRate: 20

scenarios:
  - name: CompleteFlow
    flow:
      - function: setProbabilities

      # Add an author
      - post:
          url: /graphql
          capture:
            json: $.data.addAuthor.id
            as: newAuthorId
          json:
            operationName: AddAuthor
            variables:
              author:
                name: Test New Author
            query: 'mutation AddAuthor($author: AddAuthorInput!) { addAuthor(author: $author) { id name } }'

      # Wait for the author add to complete
      - think: 1

      # Add a book
      - post:
          url: /graphql
          capture:
            json: $.data.addBook.id
            as: newBookId
          json:
            operationName: AddBook
            variables:
              book:
                title: Test New Book
                authorId: '{{ newAuthorId }}'
            query: 'mutation AddBook($book: AddBookInput!) { addBook(book: $book) { id title author { id name } } }'

      # Wait for the book add to complete
      - think: 1

      # Fetch all authors
      - post:
          url: /graphql
          json:
            operationName: Authors
            variables:
            query: 'query Authors { authors { id name books { id title } } }'

      # Fetch one author
      - post:
          url: /graphql
          json:
            operationName: Author
            variables:
              id: '{{ newAuthorId }}'
            query: 'query Author($id: ID!) { author(id: $id) { id name books { id title } } }'

      # Fetch all books
      - post:
          url: /graphql
          json:
            operationName: Books
            variables:
            query: 'query Books { books { id title author { id name } } }'

      # Fetch one book
      - post:
          url: /graphql
          json:
            operationName: Book
            variables:
              id: '{{ newBookId }}'
            query: 'query Book($id: ID!) { book(id: $id) { id title author { id name } } }'

      # Delete one book
      - post:
          url: /graphql
          json:
            operationName: DeleteBook
            variables:
              bookId: '{{ newBookId }}'
            query: 'mutation DeleteBook($bookId: ID!) { deleteBook(bookId: $bookId) }'

      # Delete one author
      - post:
          url: /graphql
          json:
            operationName: DeleteAuthor
            variables:
              authorId: '{{ newAuthorId }}'
            query: 'mutation DeleteAuthor($authorId: ID!) { deleteAuthor(authorId: $authorId) }'

      # Invalid field on named query
      - post:
          url: /graphql
          ifTrue: runInvalidFieldNamed
          json:
            operationName: InvalidField
            variables:
            query: 'query InvalidField { authors { id test } }'

      # Not found on named query
      - post:
          url: /graphql
          ifTrue: runNotFoundNamed
          json:
            operationName: NotFound
            variables:
              id: '{{ newAuthorId }}'
            query: 'query NotFound($id: ID!) { author(id: $id) { id } }'

      # Invalid field on unnamed query
      - post:
          url: /graphql
          ifTrue: runInvalidFieldUnnamed
          json:
            operationName: null
            variables:
            query: 'query { authors { id test } }'

      # Not found on unnamed query
      - post:
          url: /graphql
          ifTrue: runNotFoundUnnamed
          json:
            operationName: null
            variables:
              id: '{{ newAuthorId }}'
            query: 'query($id: ID!) { author(id: $id) { id } }'
